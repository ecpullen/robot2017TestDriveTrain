// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2648.robot2017.subsystems;

import org.usfirst.frc2648.robot2017.RobotMap;
import org.usfirst.frc2648.robot2017.commands.*;
import com.ctre.CANTalon;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Intake extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final DoubleSolenoid lIntake = RobotMap.intakelIntake;
    private final DoubleSolenoid rIntake = RobotMap.intakerIntake;
    private final CANTalon intake = RobotMap.intakeintake;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private boolean toggle = true;

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new IntakeStop());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void intake(double power){
    	intake.set(power);
    }
    public void stop(){
    	intake(0);
    }
    public void intakeDown(){
    	toggle = true;
    	intakeToggle();
    }
    public void intakeUp(){
    	toggle = false;
    	intakeToggle();
    }
    public void intakeToggle(){
    	if(toggle){
    		rIntake.set(Value.kForward);
    		lIntake.set(Value.kForward);
    	}
    	else{
    		rIntake.set(Value.kReverse);
    		lIntake.set(Value.kReverse);
    	}
    	toggle = !toggle;
    }
    
}


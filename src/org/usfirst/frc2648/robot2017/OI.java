// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2648.robot2017;

import org.usfirst.frc2648.robot2017.commands.ClimberOn;
import org.usfirst.frc2648.robot2017.commands.DistDrive;
import org.usfirst.frc2648.robot2017.commands.DriveTurn;
import org.usfirst.frc2648.robot2017.commands.FeedShooter;
import org.usfirst.frc2648.robot2017.commands.GyroTurn;
import org.usfirst.frc2648.robot2017.commands.IntakeIn;
import org.usfirst.frc2648.robot2017.commands.PidDrive;
import org.usfirst.frc2648.robot2017.commands.PidTurn;
import org.usfirst.frc2648.robot2017.commands.ShootTest;
import org.usfirst.frc2648.robot2017.commands.ShooterOnClose;
import org.usfirst.frc2648.robot2017.commands.ToggleIntake;

import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.buttons.Button;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

public class OI {

	private XboxController j1;
	private XboxController j2;
	private Button toggleIntake, shooterOnClose, intakeIn, climberOn, feedShooter,shootTest;
    public OI() {

        /*SmartDashboard.putData("ToggleIntake", new ToggleIntake());
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("GearOut", new GearOut());
        SmartDashboard.putData("GearIn", new GearIn());
        SmartDashboard.putData("IntakeUp", new IntakeUp());
        SmartDashboard.putData("IntakeDown", new IntakeDown());
        SmartDashboard.putData("ArcadeDrive", new ArcadeDrive());
        SmartDashboard.putData("IntakeIn", new IntakeIn());
        SmartDashboard.putData("IntakeOut", new IntakeOut());
        SmartDashboard.putData("ShooterOn", new ShooterOn());
        SmartDashboard.putData("IntakeStop", new IntakeStop());
        SmartDashboard.putData("ShooterStop", new ShooterStop());
        SmartDashboard.putData("ClimberOn", new ClimberOn());
        SmartDashboard.putData("ClimberOff", new ClimberOff());
        SmartDashboard.putData("LockON", new LockON());
        SmartDashboard.putData("FeedShooter", new FeedShooter());
        SmartDashboard.putDouble("lENC", Robot.driveTrain.getlEnc().getDistance());
        SmartDashboard.putDouble("rENC", Robot.driveTrain.getrEnc().getDistance());
        SmartDashboard.putDouble("Ultrasonic", Robot.driveTrain.getUs().getVoltage());*/
        //SmartDashboard.putData("DistDrive", new DistDrive(6));
        //SmartDashboard.putData("EncTurn(1)", new EncTurn(1));
        //SmartDashboard.putData("EncTurn(.25)", new EncTurn(.19));
        //SmartDashboard.putData("ShootOnClose", new ShooterOnClose());
        //SmartDashboard.putData("EncDrive(1)", new EncDrive(1));
        //SmartDashboard.putData("EncDrive(6)", new EncDrive(6));
        //SmartDashboard.putDouble("ShooterEnc", Robot.shooter.getShooterEnc().getRate());
        //SmartDashboard.putData(new GearFromBesideBoiler());
        //SmartDashboard.putData("rev ENC",new EncDriveRev((double)6));
        SmartDashboard.putData("GyroTurn(360)", new GyroTurn(360));
        SmartDashboard.putData("GyroTurn(90)", new GyroTurn(90));
        SmartDashboard.putData("DistDrive(-6)",new DistDrive(-6));
        SmartDashboard.putData("DistDrive(2)", new DistDrive(2));
        SmartDashboard.putData("DistDrive(6) exact", new DistDrive(-(6-21/12)));
        SmartDashboard.putData("PidDrive", new PidDrive(1.25,0,0,-3));
        SmartDashboard.putData("PidDriveBack", new PidDrive(1.25,0,0,3));
        SmartDashboard.putData("PidTurn", new PidTurn(.1,0,0,90));
        SmartDashboard.putData("PidTurnRev", new PidTurn(.1,0,0,-90));
        SmartDashboard.putData("DriveTurn", new DriveTurn());
        j1 = new XboxController(0);
        j2 = new XboxController(1);
        
        shooterOnClose = new JoystickButton(j1, 1);
        feedShooter = new JoystickButton(j1,2);
        
        intakeIn = new JoystickButton(j1, 8);
        toggleIntake = new JoystickButton(j1, 10);
        climberOn = new JoystickButton(j1,3);
        feedShooter.whileHeld(new FeedShooter());
        shooterOnClose.whileHeld(new ShooterOnClose());
        intakeIn.whileHeld(new IntakeIn());
        toggleIntake.whenPressed(new ToggleIntake());
        climberOn.whileHeld(new ClimberOn());
        shootTest = new JoystickButton(j1,9);
        shootTest.whileHeld(new ShootTest());
        
    }

    public XboxController getj1(){
    	return j1;
    }
}

